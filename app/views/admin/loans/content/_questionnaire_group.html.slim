  div
    - optional_encountered = false
    - optionals_exist = group.children.any? { |i| !i.required_for?(@loan) }
    - group.children.sort_by_required(@loan).each_with_index do |field, idx|
    
      - optional = !field.required_for?(@loan)
      - if !optional_encountered && optionals_exist && optional
        - optional_encountered = true
        <fieldset class="optional_questions"><legend>#{t 'questionnaires.optional_questions'}</legend>

      - value = value_set.custom_value(field.id)
      - css_class = optional ? 'optional' : 'required'
      - css_class += ' hidden-print' if field.data_type != 'group' && value.blank?
      .question data-level=field.level data-type=field.data_type data-id=field.id class=css_class
        - index_str = (indices + [idx + 1]).join(".")

        - if field.data_type == 'group'
          / Page header for print view
          - if field.has_non_group_children?
            .header
              = @loan.division.name
              br
              = t("loan.print_header_title")
              br
              = @loan.organization.name
              br
              = I18n.l(Date.today, format: :long)

            - item_tag = {tag: %i(h3 h4 h5)[group.depth + 1] || :h5}
            *item_tag
              => index_str
              = (parents.map(&:label) + [field.label]).join(": ")
        - else
          .question-label = "#{index_str} #{field.label}"

        - if field.explanation.present?
          p.help-block.hidden-print.tree-view = field.explanation

        / Recurse if group, else render
        - if field.data_type == 'group'

          = render("admin/loans/content/questionnaire_group",
            f: f, value_set: value_set, group: field, parents: parents + [field], indices: indices + [idx + 1])

        - else

          .answer-wrapper.tree-view

            - if value.has_rating?
              - if value.rating.present?
                .view-element.answer = "#{I18n.t('loan.rating')}: #{value.rating}"
              = f.input_field "#{field.attribute_sym}__rating".to_sym,
                collection: Array(1..5), prompt: I18n.t("select_prompt"), data: {rating: true}

            - if value.has_number?
              - if value.number.present?
                .view-element.answer = value.number
              = f.input_field "#{field.attribute_sym}__number".to_sym, as: :decimal

            - if value.has_text?
              - if value.text.present?
                .view-element.answer = simple_format(value.text)
              = f.input_field "#{field.attribute_sym}__text".to_sym, as: value.text_form_field_type

            - if value.has_boolean?
              - if value.boolean.present?
                .view-element.answer = t(value.boolean ? "reply_yes" : "reply_no")
              = f.input_field "#{field.attribute_sym}__boolean".to_sym,
                collection: %i(yes no), label_method: ->(i) { t("reply_#{i}") },
                prompt: I18n.t("select_prompt"), data: {boolean: true}

            - if value.has_sheet?
              - sheet = value.embeddable_media || EmbeddableMedia.new
              .view-element
                - if sheet.url
                  p.spreadsheet-links
                    a[href="#" data-expands="iframe-#{field.attribute_sym}"
                      data-content="<iframe src='#{sheet.url}'>"]
                      = t("loan.spreadsheet_inline")
                    a href="#" data-hides="iframe-#{field.attribute_sym}"
                      = t("loan.spreadsheet_hide")
                    = ' - '
                    = link_to t("loan.spreadsheet_new_tab"), sheet.url, {target: '_blank'}

                  div.spreadsheet data-expandable="iframe-#{field.attribute_sym}"

            - if value.blank?
              .view-element.answer.blank = t("loan.no_answer")

    - if optional_encountered
      </fieldset>
