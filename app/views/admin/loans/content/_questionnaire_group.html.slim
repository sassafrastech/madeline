  / Note: the grouping of optional questions that happens here and in LoanQuestionnairesView
  / should probably be refactored someday to happen in the model
  div
    - optional_encountered = false
    - optionals_exist = roots.any? { |i| !i.required_for?(@loan) }
    - requireds_exist = roots.any? { |i| i.required_for?(@loan) }

    - roots.each_with_index do |field, idx|

      - if field.data_type == 'group' && !field.first_child? && !value_set.tree_unanswered?(field)
        / Close and reopen fieldset with new group/page
        - if optional_encountered
          </fieldset>
          - reopen_fieldset = true

        / Page header for print view
        .header
          = @loan.division.name
          br
          = t("loan.print_header_title")
          br
          = @loan.organization.name
          br
          = I18n.l(Date.today, format: :long)

      - optional = !field.required_for?(@loan)
      - start_of_optional_group = !optional_encountered && optionals_exist && requireds_exist && optional
      - if reopen_fieldset || (start_of_optional_group && !value_set.tree_unanswered?(field))
        - optional_encountered = true; reopen_fieldset = false
        <fieldset class="optional_questions"><legend>#{t 'questionnaires.optional_questions'}</legend>

      - value = value_set.custom_value(field)
      - css_class = optional ? 'optional' : 'required'

      / Don't print unanswered questions or groups
      - css_class += ' hidden-print' if value_set.tree_unanswered?(field)

      .question data-level=field.level data-type=field.data_type data-id=field.id class=css_class
        - index_str = (indices + [idx + 1]).join(".")

        span.tree-view
          - if !field.leaf?
            = render "admin/loans/content/progress_bar", object: value

          - if field.data_type == 'group'
            - header_tag = {tag: %i(h3 h4 h5)[field.depth] || :h5}
            *header_tag
              / Group title
              => index_str
              - if field.first_child?
                = field.label
              - else
                = (parents.map(&:label) + [field.label]).join(": ")

          - else
            .question-label = "#{index_str} #{field.label}"

        - if field.explanation.present?
          p.help-block.hidden-print.tree-view = field.explanation

        / Recurse if group, else render
        - if field.data_type == 'group'
          - if (filtered_children = field.children.filter_for(@loan)).present?
            = render("admin/loans/content/questionnaire_group",
              f: f, value_set: value_set, roots: filtered_children, 
              parents: parents + [field], indices: indices + [idx + 1])

        - else

          .answer-wrapper.tree-view
            / It's very useful to be able to temporarily expose this block for debugging.
            / Please don't remove.
            /= "field id: #{field.id}"
            /br
            /= "raw data: #{value_set.custom_data[field.id.to_s]}"
            /br

            - if value.has_rating?
              - if value.rating.present?
                .view-element.answer = "#{I18n.t('loan.rating')}: #{value.rating}"
              = f.input_field :"#{field.attribute_sym}__rating",
                collection: Array(1..5), prompt: I18n.t("select_prompt"), data: {rating: true}

            - if value.has_number?
              - if value.number.present?
                .view-element.answer = value.number
              = f.input_field :"#{field.attribute_sym}__number", as: :decimal

            - if value.has_text?
              - if value.text.present?
                .view-element.answer = simple_format(value.text)
              = f.input_field :"#{field.attribute_sym}__text", as: value.text_form_field_type

            - if value.has_boolean?
              - if value.boolean.present?
                .view-element.answer = t(value.boolean ? "reply_yes" : "reply_no")
              = f.input_field :"#{field.attribute_sym}__boolean",
                collection: %i(yes no), label_method: ->(i) { t("reply_#{i}") },
                prompt: I18n.t("select_prompt"), data: {boolean: true}

            - if value.has_breakeven_table?
              - if value.breakeven_report.present?
                .view-element
                  = render "admin/loans/content/breakeven_table_report", report: value.breakeven_report
                  = render "admin/loans/content/breakeven_charts", report: value.breakeven_report
              .form-element
                = render 'admin/loans/content/breakeven_table_question', f: f, field: field, data: value.breakeven_data_hash
                
            - if value.has_business_canvas?
              .answer class=('form-element' if value.business_canvas_blank?)
                = render 'admin/loans/content/business_model_canvas', f: f, field: field, data: value.business_canvas_data

            - if value.has_linked_document?
              = render 'admin/loans/content/linked_document', f: f, field: field, document: value.linked_document

            - if value.blank?
              .view-element.answer.blank = t("loan.no_answer")

    - if optional_encountered
      </fieldset>
