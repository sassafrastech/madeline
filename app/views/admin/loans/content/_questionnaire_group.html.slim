  / Note: the grouping of optional questions that happens here and in LoanQuestionnairesView
  / should probably be refactored someday to happen in the model
  div
    - optional_encountered = false
    - optionals_exist = group.kids.any? { |i| !i.required_for?(@loan) }
    - requireds_exist = group.kids.any? { |i| i.required_for?(@loan) }

    - group.kids.sort_by { |i| [i.required_for?(@loan) ? 0 : 1, i.position] }.each_with_index do |field, idx|

      - if field.data_type == 'group' && !field.first_child? && !value_set.tree_unanswered?(field)
        / Close and reopen fieldset with new group/page
        - if optional_encountered
          </fieldset>
          - reopen_fieldset = true

        / Page header for print view
        .header
          = @loan.division.name
          br
          = t("loan.print_header_title")
          br
          = @loan.organization.name
          br
          = I18n.l(Date.today, format: :long)

      - optional = !field.required_for?(@loan)
      - start_of_optional_group = !optional_encountered && optionals_exist && requireds_exist && optional
      - if reopen_fieldset || (start_of_optional_group && !value_set.tree_unanswered?(field))
        - optional_encountered = true; reopen_fieldset = false
        <fieldset class="optional_questions"><legend>#{t 'questionnaires.optional_questions'}</legend>

      - value = value_set.custom_value(field)
      - css_class = optional ? 'optional' : 'required'

      / Don't print unanswered questions or groups
      - css_class += ' hidden-print' if value_set.tree_unanswered?(field)

      .question data-level=field.level data-type=field.data_type data-id=field.id class=css_class
        - index_str = (indices + [idx + 1]).join(".")

        span.tree-view
          - if !field.leaf?
            = render "admin/loans/content/progress_bar", object: value

          - if field.data_type == 'group'
            - header_tag = {tag: %i(h3 h4 h5)[group.depth + 1] || :h5}
            *header_tag
              / Group title
              => index_str
              - if field.first_child?
                = field.label
              - else
                = (parents.map(&:label) + [field.label]).join(": ")

          - else
            .question-label = "#{index_str} #{field.label}"

        - if field.explanation.present?
          p.help-block.hidden-print.tree-view = field.explanation

        / Recurse if group, else render
        - if field.data_type == 'group'

          = render("admin/loans/content/questionnaire_group",
            f: f, value_set: value_set, group: field, parents: parents + [field], indices: indices + [idx + 1])

        - else

          .answer-wrapper.tree-view
            / It's very useful to be able to temporarily expose this block for debugging.
            / Please don't remove.
            /= "field id: #{field.id}"
            /br
            /= "raw data: #{value_set.custom_data[field.id.to_s]}"
            /br

            - if value.has_rating?
              - if value.rating.present?
                .view-element.answer = "#{I18n.t('loan.rating')}: #{value.rating}"
              = f.input_field "#{field.attribute_sym}__rating".to_sym,
                collection: Array(1..5), prompt: I18n.t("select_prompt"), data: {rating: true}

            - if value.has_number?
              - if value.number.present?
                .view-element.answer = value.number
              = f.input_field "#{field.attribute_sym}__number".to_sym, as: :decimal

            - if value.has_text?
              - if value.text.present?
                .view-element.answer = simple_format(value.text)
              = f.input_field "#{field.attribute_sym}__text".to_sym, as: value.text_form_field_type

            - if value.has_boolean?
              - if value.boolean.present?
                .view-element.answer = t(value.boolean ? "reply_yes" : "reply_no")
              = f.input_field "#{field.attribute_sym}__boolean".to_sym,
                collection: %i(yes no), label_method: ->(i) { t("reply_#{i}") },
                prompt: I18n.t("select_prompt"), data: {boolean: true}

            - if value.has_linked_document?
              - document = value.linked_document
              .attached-document
                .linked-document.form-element.form-inline
                  h5 = t("linked_document.linked_document")

                  .ld-container
                    .form-group.full-width-group
                      label for="#{field.attribute_sym}__url" = t("linked_document.url")
                      = f.input_field "#{field.attribute_sym}__url".to_sym, as: :string,
                        class: 'form-control', placeholder: t("linked_document.link")
                    .help-block
                      span = t("linked_document.range_of_cells")
                    .form-group
                      label for="#{field.attribute_sym}__start_cell" = t("linked_document.cell_start")
                      = f.input_field "#{field.attribute_sym}__start_cell".to_sym, as: :string,
                      class: 'form-control', placeholder: t("linked_document.cell_start_hint")
                    .form-group
                      label for="#{field.attribute_sym}__end_cell" = t("linked_document.cell_end")
                      = f.input_field "#{field.attribute_sym}__end_cell".to_sym, as: :string,
                      class: 'form-control', placeholder: t("linked_document.cell_end_hint")
                    - if document
                      - if document.display_url.present?
                        .doc-actions
                          a [data-action="delete"
                            data-confirm== t("linked_document.delete_confirmation")
                            data-confirm-cancel== t(:cancel)
                            data-confirm-proceed== t(:confirm)
                            data-confirm-title== t("linked_document.linked_document")]
                            = t("linked_document.delete")

                .spreadsheet-links.view-element
                  - if document
                    .doc-actions
                      - if document.display_url.present?
                        / Beware, the display_height value doesn't not seem to be honored
                        a[href="#" data-expands="iframe-#{field.attribute_sym}"
                          data-content="<iframe src='#{document.display_url}' height='#{document.display_height}'>"]
                          i.fa.fa-eye.fa-large>
                          = t("loan.spreadsheet_inline")
                        a href="#" data-hides="iframe-#{field.attribute_sym}"
                          i.fa.fa-eye-slash.fa-large>
                          = t("loan.spreadsheet_hide")
                        = link_to document.url, target: '_blank'
                          i.fa.fa-external-link.fa-large>
                          = t("loan.spreadsheet_new_tab")
                  .spreadsheet data-expandable="iframe-#{field.attribute_sym}"

            - if value.blank?
              .view-element.answer.blank = t("loan.no_answer")

    - if optional_encountered
      </fieldset>
