= simple_form_for([:admin, record],
    html: { \
      class: 'form-horizontal organization-record',
    },
    wrapper: :horizontal_form_condensed,
    defaults: { \
      input_html: {class: 'form-element form-control'},
    },
  ) do |f|


  = f.hidden_field(:custom_value_set_linkable_type)
  = f.hidden_field(:custom_value_set_linkable_id)
  = f.hidden_field(:custom_field_set_id)
  = f.hidden_field(:linkable_attribute)

  - record.custom_field_set.depth_first_fields.each do |field|
    - loan_response = record.custom_value(field.id)

    div style="margin-left: #{field.depth*15}px"
      p
        = "#{field.transient_position}. "
        b = field.label
        /= " #{field.attribute_sym}: original hash: #{loan_response.original_hash}"

      - if field.explanation.present?
        /todo 4301: better style handling
        p style="font-size:x-small; color:grey; margin-top: -10px"
          = field.explanation
      - unless field.data_type == 'group'
        - field = loan_response.custom_field
        /p = "#{field.attribute_sym}: original hash: #{loan_response.original_hash}"

        - if loan_response.has_rating?
          .view-element = "Rating: #{loan_response.rating}"
          = f.input_field "#{field.attribute_sym}__rating".to_sym, collection: Array(0..5), include_blank: true
        - if loan_response.has_number?
          .view-element = loan_response.number
          = f.input_field "#{field.attribute_sym}__number".to_sym, as: :decimal
        - if loan_response.has_sheet?
          - sheet = loan_response.embeddable_media || EmbeddableMedia.new
          .view-element
            - if sheet.url
              p = link_to 'Spreadsheet', sheet.url, {target: '_blank'}
              /todo 4301: make initially hidden
              /iframe width='#{sheet.width}' height='#{sheet.height}' frameborder='1' src='#{sheet.url}'
          /4301 Todo: Figure out how to approach editing the spread sheet parameters
          /- f.simple_fields_for sheet do |ff|
          /  = ff.input_field :original_url
          /  = ff.input_field :height
          /  = ff.input_field :width
        - if loan_response.has_text?
          .view-element = loan_response.text
          = f.input_field "#{field.attribute_sym}__text".to_sym, as: loan_response.text_form_field_type

        /.view-element
        /  - if loan_response.has_rating?
        /    = "Rating: #{loan_response.rating}"
        /    br
        /  - if loan_response.has_number?
        /    = loan_response.number
        /    br
        /  - if loan_response.has_text?
        /    = loan_response.text
        /    br
        /
        /- f.simple_fields_for loan_response do |ff|
        /  = ff.input_field :rating, collection: [0..5], include_blank: true
        /  = ff.input_field :number, as: :decimal
        /  = ff.input_field :text, as: loan_response.text_form_field_type


        /.view-element = record.custom_value(field.id)
        /= f.input_field field.attribute_sym, as: field.form_field_type

  .actions.form-block
    - unless record.new_record?
      - if record.valid?
        a.btn.btn-default.show-action = t(:cancel)
      - else
        a.btn.btn-default href=admin_custom_value_set_path(record) = t(:cancel)
    = f.submit class: 'update-action btn btn-success'
  .clearfix