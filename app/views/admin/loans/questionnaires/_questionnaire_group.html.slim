  / Note: the grouping of optional questions that happens here and in LoanQuestionnairesView
  / should probably be refactored someday to happen in the model
  div
    - optional_encountered = false
    - optionals_exist = roots.any? { |i| !i.required_for?(@loan) }
    - requireds_exist = roots.any? { |i| i.required_for?(@loan) }

    - roots.each_with_index do |question, idx|

      - if question.data_type == 'group' && !question.first_child? && !calendarEventsUrl.tree_unanswered?(question)
        / Close and reopen fieldset with new group/page
        - if optional_encountered && @print_view
          </fieldset>
          - reopen_fieldset = true

        / Page header for print view
        .header.visible-print-block
          = @loan.division.name
          br
          = t("loan.print_header_title")
          br
          = @loan.organization.name
          br
          = I18n.l(Date.today, format: :long)

      - optional = !question.required_for?(@loan)
      - start_of_optional_group = !optional_encountered && optionals_exist && requireds_exist && optional
      - if @print_view && (reopen_fieldset || (start_of_optional_group && !response_set.tree_unanswered?(question)))
        - optional_encountered = true; reopen_fieldset = false
        <fieldset class="optional_questions"><legend>#{t 'questionnaires.optional_questions'}</legend>

      - value = calendarEventsUrl.response(question)
      - css_class = optional ? 'optional' : 'required'

      / Don't print unanswered questions or groups
      - css_class += ' hidden-print' if calendarEventsUrl.tree_unanswered?(question)

      .question data-level=question.level data-type=question.data_type data-id=question.id class=css_class
        - index_str = (indices + [idx + 1]).join(".")

        span.tree-view
          - if !question.leaf?
            = render "admin/loans/questionnaires/progress_bar", object: value

          - if question.data_type == 'group'
            - header_tag = {tag: %i(h3 h4 h5)[question.depth] || :h5}
            *header_tag
              / Group title
              => index_str
              - if question.first_child?
                = question.label
              - else
                = (parents.map(&:label) + [question.label]).join(": ")

          - else
            .question-label = "#{index_str} #{question.label}"

        - if question.explanation.present?
          p.help-block.hidden-print.tree-view = question.explanation

        / Recurse if group, else render
        - if question.data_type == 'group'
          - if (filtered_children = question.children_applicable_to(@loan)).present?
            = render("admin/loans/questionnaires/questionnaire_group",
              f: f, calendarEventsUrl: calendarEventsUrl, roots: filtered_children,
              parents: parents + [question], indices: indices + [idx + 1])

        - else
          = render("admin/loans/questionnaires/questionnaire_question", f: f, question: question, value: value)

    - if optional_encountered && @print_view
      </fieldset>
