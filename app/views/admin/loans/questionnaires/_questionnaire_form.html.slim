.questionnaire-form
  = simple_form_for([:admin, response_set],
      html: { \
        class: 'form-horizontal',
      },
      wrapper: :horizontal_form_condensed,
      defaults: { \
        input_html: {class: 'form-element form-control'},
      },
    ) do |f|

    = error_notification(f)
    
    - if @conflict
      .alert.alert-danger
        = t('loan.response_set.conflicting_changes', 
            link: admin_loan_tab_path(@loan.id, tab: 'questions', filter: @response_set.kind),
            updater: @response_set.updater.try(:name) || t(:unknown), 
            updated_at: l(@response_set.updated_at, format: :long),
          ).html_safe
        .buttons
          button.btn.btn-default => t('loan.response_set.overwrite_changes')
          button.btn.btn-default = t('loan.response_set.discard_reload')
        

    = f.hidden_field(:loan_id)
    = f.hidden_field(:kind)
    = f.hidden_field(:lock_version)
    / = f.hidden_field(:loaded_at, value: @response_set.loaded_at || Time.now.to_i)

    - unless @print_view
      .jqtree data-data=@questions_json class=attrib

    .actions.form-element
      - unless response_set.new_record?
        a.btn.btn-default.show-action = t(:cancel)
      - submit_label = t("loan.save_responses")
      = f.submit submit_label, class: 'update-action btn btn-primary'
    .clearfix

  / Render form fields outside form so they don't get double submitted after being
  / copied into the jqtree
  = simple_fields_for(response_set, defaults: {input_html: {class: 'form-element form-control'}}) do |f|

    = render "admin/loans/questionnaires/questionnaire_group",
      f: f, response_set: response_set, roots: @roots.children_applicable_to(@loan),
      parents: [], indices: []
