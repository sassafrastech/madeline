form {
  .help-block {
    margin-bottom: 0;
    font-size: 12px;
  }
}

.form-group.row {
  min-height: 2em;
}

.edit-view .form-group.date .form-element {
  width: 30%;
  max-width: 150px;
  display: inline-block;
  padding-right: 10px;
}

// Booleans should not have fixed height/widths. A style from somewhere else is
// trying to impose them on all .form-controls.
// The .form-group .checkbox selector is for collections with type: :check_boxes
.form-group.boolean, .form-group .checkbox {
  .form-control {
    height: inherit;
    width: inherit;
  }
}

.form-group.boolean .form-control[type="checkbox"] {
  display: inline-block;
  margin-left: 10px;
}

// For collections rendered as type: :check_boxes, the checkboxes and their labels are rendered inside
// span.checkbox. This shows them all on one line.
.form-group span.checkbox {
  display: inline-block;
  margin: 0 10px;
}

.radio input[type=radio] {
  width: inherit;
  display: inline-block;
  height: 14px;
  margin-right: 10px;
  position: relative;
}

.form-group textarea.text {
  height: 6em;
}

// These classes allow toggling of form view and show view.
// Each form field consists of a .form-element (with the actual <input>, etc.)
// and a .view-element (with the read-only attribute data).
// When the user clicks 'edit', the edit-view class is appended to an outer element,
// and these styles thus make the .view-elements disappear and the .form-elements show.
// When the user clicks 'cancel edit', the opposite happens.
.edit-view, .new-view {
  .form-element {
    display: block;
  }

  // We need to list specific tag types here that need to override the default display: block above.
  a.form-element { display: inline; }
  input.form-element, textarea.form-element, select.form-element { display: inline-block; }

  .view-element {
    display: none !important;
  }

  // Form controls are generally tall, so if some text is being displayed where a
  // form control normally is, we need to add some padding.
  .form-horizontal .static-text-as-field {
    padding-top: 7px;
  }
}

.show-view {
  .view-element {
    display: block;
  }

  // We need to list specific tag types here that need to override the default display: block above.
  a.view-element { display: inline; }

  .form-element, .form-group .checkbox {
    display: none !important;
  }

  // Bootstrap puts a 7px padding-top on labels, which looks good when there are big fat form controls
  // to their right, but not so when we're just showing a bunch of text. So we override it here.
  .form-horizontal .control-label {
    padding-top: 0;
  }

  abbr[title="required"] {
    display: none;
  }

  // Need to specially hide the label element that Rails inserts for checkboxes,
  // as it makes the element too tall in show mode.
  .form-group.boolean div label {
    display: none;
  }

  // Hide hints in show view
  .help-block {
    display: none;
  }
}

.select2-container {
  width: 100% !important;
  padding: 0;
}

.actions {
  float: right;
  a {
    margin: 0 15px 0 0;
    float: left;
  }
}

.date.required.form-control {
  display: inline-block;
  width: 32%;
  margin-right: 5px;
}

.inline {
  display: inline-block;
  width: auto;
}

// Labels are bold by default.
label.light {
  font-weight: normal;
}

.instructions {
  padding: .5em 0 0;
  font-size: .9em;
  font-style: italic;
}
